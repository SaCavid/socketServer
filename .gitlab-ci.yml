stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy
variables:
  DOCKER_TEST_IMAGE_NAME: $CI_REGISTRY/$CI_PROJECT_PATH/buildenv:$CI_COMMIT_REF_SLUG
  BUILD_PATH: /appbuild

build-job:       # This job runs in the build stage, which runs first.
  image: golang:1.16-alpine
  stage: build
  script:
    - echo "Compiling the code..."
    - go mod download
    - go build -o ./cmd/main ./cmd/main.go
    - echo "Compile complete."
    - echo $DOCKER_TEST_IMAGE_NAME
    - echo $BUILD_PATH

race-test-job: # This job runs in the test stage.
  image: golang
  stage: test
  script:
    - echo "Compiling the code..."
    - go mod download
    - go build -o ./cmd/main ./cmd/main.go
    - echo "Compile complete."
    - apt-get update
    - apt-get install build-essential
    - go test -race ./cmd/main.go

lint-test-job: # This job also runs in the test stage.
  image: golang:1.16-alpine
  stage: test
  script:
    - echo "Compiling the code..."
    - go mod download
    - go build -o ./cmd/main ./cmd/main.go
    - echo "Compile complete."
    - go get -u golang.org/x/lint/golint
    - chmod +x $GOPATH/bin/golint
    - golint -set_exit_status ./...


# deploy-job:      # This job runs in the deploy stage.
#   stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
#   script:
#     - echo "Deploying application..."
#     - echo "Application successfully deployed."
